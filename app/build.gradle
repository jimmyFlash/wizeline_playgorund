apply plugin: 'com.android.application'
apply from: '../config-android.gradle'


////////////////////////////////////////////////////////////////////////////////////////////////////
// APP NAME AND VERSION                                                                           //
////////////////////////////////////////////////////////////////////////////////////////////////////

enum BuildType {
    DEBUG,
    RELEASE
}

static def getAppName(BuildType buildType) {
    String APP_NAME = "WiseLine-playground"
    switch (buildType) {
        case BuildType.DEBUG:
            return APP_NAME + "-" + BuildType.DEBUG.name()
        case BuildType.RELEASE:
            return APP_NAME + "-" + BuildType.RELEASE.name()
    }
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0


android {
    defaultConfig {
        applicationId "com.wizeline.bookchallenge"
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", getAppName(BuildType.DEBUG)
        }

        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", getAppName(BuildType.DEBUG)
        }
    }


    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

dependencies {
    libraries()
    testing()
    architectureComponents()
    viewsArch()
    kotlin()

    // dagger dependency
    /*
    Dagger is implemented using Java's annotations model.
    It generates code at compile-time using an annotation processor.
    Annotation processors are supported in Kotlin with the kapt compiler plugin.
    They are enabled by adding apply plugin: 'kotlin-kapt' to the top of the file
    below the apply plugin: 'kotlin-android-extensions' line.
     */
    daggerX()

}
